process {

//	withLabel: modelling {
//		errorStrategy = 'retry'
// 		time  = {4.m * task.attempt}
//	     	maxRetries = {task.exitStatus in [140,143] ? 10 : 2}
//		time = 5.m
//	}

//	withName: convert_names {
//	}

	withName: index_query {
		errorStrategy = 'retry'
		cpus  = {2 * task.attempt}
        	maxRetries = {task.exitStatus in [140,143] ? 5 : 2}
	}

	withName: search_distant_homologuous {
		errorStrategy = 'retry'
		cpus  = {2 * task.attempt}
        	maxRetries = {task.exitStatus in [140,143] ? 5 : 2}
	}
	
//	withName: fastaExtract {
//		errorStrategy = 'retry'
//		cpus  = {2 * task.attempt}
//        	maxRetries = { task.exitStatus in [140,143] ? 5 : 2 }
//	}
	
//	withName: homology_modelling {
//		errorStrategy = {task.exitStatus in [140,143] ? 'retry' : 'finish'}
//		time = {task.exitStatus in [140,143] ? 5.m * task.attempt : task.time}
//    		maxRetries = {task.exitStatus in [140,143] ? 5 : 0}
//      }
	
	withName: prosa_check {
		errorStrategy = 'retry'
//    		time  = {2.m * task.attempt}
//        	maxRetries = { task.exitStatus in [140,143] ? 2 : 2 }
		time = {task.exitStatus in [140,143] ? 5.m * task.attempt : task.time}
    		maxRetries = {task.exitStatus in [140,143] ? 12 : 10}
	}
	
//	withName: extract_result {
//	}

	withName: structural_alignment {
		errorStrategy = 'retry'
		cpus = {task.exitStatus in [140,143] ? 2 * task.attempt : task.cpus}
    		maxRetries = {task.exitStatus in [140,143] ? 5 : 10}
		}
		
	withName: lineartest {
		errorStrategy = 'retry'
		cpus  = {2 * task.attempt}
        	maxRetries = {task.exitStatus in [140,143] ? 5 : 2}
	}

}









